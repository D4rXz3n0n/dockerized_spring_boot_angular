{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let AuthenticationService = /*#__PURE__*/(() => {\n  class AuthenticationService {\n    constructor(http) {\n      this.http = http; // BASE_PATH: 'http://localhost:8080'\n\n      this.USER_NAME_SESSION_ATTRIBUTE_NAME = 'authenticatedUser';\n    }\n\n    authenticationService(username, password) {\n      return this.http.get(`http://localhost:8080/`, {\n        headers: {\n          'Access-Control-Allow-Origin': '*',\n          authorization: this.createBasicAuthToken(username, password)\n        },\n        responseType: 'text'\n      }).pipe(map(res => {\n        this.username = username;\n        this.password = password;\n        if (this.authorization != undefined) this.registerSuccessfulLogin(this.authorization);\n      }));\n    }\n\n    createBasicAuthToken(username, password) {\n      console.log(username + \":\" + password);\n      console.log(window.btoa(username + \":\" + password));\n      this.authorization = window.btoa(username + \":\" + password);\n      return 'Basic ' + this.authorization;\n    }\n\n    registerSuccessfulLogin(authorization) {\n      sessionStorage.setItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME, authorization);\n    }\n\n    logout() {\n      sessionStorage.removeItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME);\n      this.username = undefined;\n      this.password = undefined;\n      this.authorization = undefined;\n    }\n\n    isUserLoggedIn() {\n      let user = sessionStorage.getItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME);\n      if (user === null) return false;\n      return true;\n    }\n\n    getLoggedInUserName() {\n      let user = sessionStorage.getItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME);\n      if (user === null) return '';\n      return user;\n    }\n\n  }\n\n  AuthenticationService.ɵfac = function AuthenticationService_Factory(t) {\n    return new (t || AuthenticationService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  AuthenticationService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthenticationService,\n    factory: AuthenticationService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthenticationService;\n})();","map":null,"metadata":{},"sourceType":"module"}